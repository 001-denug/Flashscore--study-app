"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/predictions";
exports.ids = ["pages/api/predictions"];
exports.modules = {

/***/ "jsdom":
/*!************************!*\
  !*** external "jsdom" ***!
  \************************/
/***/ ((module) => {

module.exports = require("jsdom");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "axios":
/*!************************!*\
  !*** external "axios" ***!
  \************************/
/***/ ((module) => {

module.exports = import("axios");;

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fpredictions&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fpredictions.ts&middlewareConfigBase64=e30%3D!":
/*!**********************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fpredictions&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fpredictions.ts&middlewareConfigBase64=e30%3D! ***!
  \**********************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _src_pages_api_predictions_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/pages/api/predictions.ts */ \"(api)/./src/pages/api/predictions.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_src_pages_api_predictions_ts__WEBPACK_IMPORTED_MODULE_3__]);\n_src_pages_api_predictions_ts__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_predictions_ts__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_predictions_ts__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/predictions\",\n        pathname: \"/api/predictions\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _src_pages_api_predictions_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRnByZWRpY3Rpb25zJnByZWZlcnJlZFJlZ2lvbj0mYWJzb2x1dGVQYWdlUGF0aD0uJTJGc3JjJTJGcGFnZXMlMkZhcGklMkZwcmVkaWN0aW9ucy50cyZtaWRkbGV3YXJlQ29uZmlnQmFzZTY0PWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDTDtBQUMxRDtBQUMyRDtBQUMzRDtBQUNBLGlFQUFlLHdFQUFLLENBQUMsMERBQVEsWUFBWSxFQUFDO0FBQzFDO0FBQ08sZUFBZSx3RUFBSyxDQUFDLDBEQUFRO0FBQ3BDO0FBQ08sd0JBQXdCLGdIQUFtQjtBQUNsRDtBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxZQUFZO0FBQ1osQ0FBQzs7QUFFRCxxQyIsInNvdXJjZXMiOlsid2VicGFjazovL3dvcmtzcGFjZS8/ODEwNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQYWdlc0FQSVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvcGFnZXMtYXBpL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IGhvaXN0IH0gZnJvbSBcIm5leHQvZGlzdC9idWlsZC90ZW1wbGF0ZXMvaGVscGVyc1wiO1xuLy8gSW1wb3J0IHRoZSB1c2VybGFuZCBjb2RlLlxuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi4vc3JjL3BhZ2VzL2FwaS9wcmVkaWN0aW9ucy50c1wiO1xuLy8gUmUtZXhwb3J0IHRoZSBoYW5kbGVyIChzaG91bGQgYmUgdGhlIGRlZmF1bHQgZXhwb3J0KS5cbmV4cG9ydCBkZWZhdWx0IGhvaXN0KHVzZXJsYW5kLCBcImRlZmF1bHRcIik7XG4vLyBSZS1leHBvcnQgY29uZmlnLlxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IGhvaXN0KHVzZXJsYW5kLCBcImNvbmZpZ1wiKTtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFBhZ2VzQVBJUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLlBBR0VTX0FQSSxcbiAgICAgICAgcGFnZTogXCIvYXBpL3ByZWRpY3Rpb25zXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvcHJlZGljdGlvbnNcIixcbiAgICAgICAgLy8gVGhlIGZvbGxvd2luZyBhcmVuJ3QgdXNlZCBpbiBwcm9kdWN0aW9uLlxuICAgICAgICBidW5kbGVQYXRoOiBcIlwiLFxuICAgICAgICBmaWxlbmFtZTogXCJcIlxuICAgIH0sXG4gICAgdXNlcmxhbmRcbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYWdlcy1hcGkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fpredictions&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fpredictions.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./src/controllers/predictionController.js":
/*!*************************************************!*\
  !*** ./src/controllers/predictionController.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst Prediction = __webpack_require__(/*! ../models/Prediction */ \"(api)/./src/models/Prediction.js\");\nconst Author = __webpack_require__(/*! ../models/Author */ \"(api)/./src/models/Author.js\");\nclass PredictionController {\n    constructor(){\n        // In a real app, this would connect to a database\n        this.predictions = [];\n        this.authors = [];\n        this.nextId = 1;\n        this.nextAuthorId = 1;\n        // Initialize with some sample data\n        this.initializeSampleData();\n    }\n    // Initialize sample data\n    initializeSampleData() {\n        // Create sample authors\n        const sampleAuthors = [\n            new Author(this.nextAuthorId++, \"John Sports\", \"john@sportsanalyst.com\", \"Expert football analyst with 10 years experience\", [\n                \"Football\",\n                \"Soccer\"\n            ]),\n            new Author(this.nextAuthorId++, \"Sarah Basketball\", \"sarah@hoopsexpert.com\", \"Former professional basketball player turned analyst\", [\n                \"Basketball\"\n            ]),\n            new Author(this.nextAuthorId++, \"Mike Tennis\", \"mike@tennispro.com\", \"Tennis coach and prediction specialist\", [\n                \"Tennis\"\n            ])\n        ];\n        this.authors = sampleAuthors;\n        // Create sample predictions\n        const samplePredictions = [\n            new Prediction(this.nextId++, \"Manchester United vs Liverpool - Home Win Expected\", \"Manchester United shows strong form at home this season. With key players returning from injury, expect a solid victory.\", 1, \"Football\", {\n                home: \"Manchester United\",\n                away: \"Liverpool\",\n                date: new Date(\"2024-01-20\")\n            }, 75, \"active\"),\n            new Prediction(this.nextId++, \"Lakers vs Warriors - High Scoring Game\", \"Both teams have been scoring heavily this season. Expect over 220 total points in this matchup.\", 2, \"Basketball\", {\n                home: \"Lakers\",\n                away: \"Warriors\",\n                date: new Date(\"2024-01-21\")\n            }, 80, \"active\")\n        ];\n        // Publish sample predictions\n        samplePredictions.forEach((prediction)=>prediction.publish());\n        this.predictions = samplePredictions;\n    }\n    // Get all active predictions\n    getAllPredictions() {\n        try {\n            return this.predictions.filter((prediction)=>prediction.isActive && prediction.status === \"active\").map((prediction)=>prediction.toAPI());\n        } catch (error) {\n            throw new Error(`Error fetching predictions: ${error.message}`);\n        }\n    }\n    // Get prediction by ID\n    getPredictionById(id) {\n        try {\n            const prediction = this.predictions.find((p)=>p.id === parseInt(id));\n            if (!prediction) {\n                throw new Error(\"Prediction not found\");\n            }\n            return prediction.toAPI();\n        } catch (error) {\n            throw new Error(`Error fetching prediction: ${error.message}`);\n        }\n    }\n    // Get predictions by author\n    getPredictionsByAuthor(authorId) {\n        try {\n            return this.predictions.filter((prediction)=>prediction.authorId === parseInt(authorId) && prediction.isActive).map((prediction)=>prediction.toAPI());\n        } catch (error) {\n            throw new Error(`Error fetching author predictions: ${error.message}`);\n        }\n    }\n    // Get predictions by sport\n    getPredictionsBySport(sport) {\n        try {\n            return this.predictions.filter((prediction)=>prediction.sport.toLowerCase() === sport.toLowerCase() && prediction.isActive && prediction.status === \"active\").map((prediction)=>prediction.toAPI());\n        } catch (error) {\n            throw new Error(`Error fetching sport predictions: ${error.message}`);\n        }\n    }\n    // Create new prediction\n    createPrediction(predictionData) {\n        try {\n            const prediction = new Prediction(this.nextId++, predictionData.title, predictionData.content, predictionData.authorId, predictionData.sport, predictionData.matchDetails, predictionData.confidence, predictionData.status || \"pending\");\n            const validation = prediction.validate();\n            if (!validation.isValid) {\n                throw new Error(`Validation failed: ${validation.errors.join(\", \")}`);\n            }\n            // Verify author exists\n            const author = this.authors.find((a)=>a.id === prediction.authorId);\n            if (!author) {\n                throw new Error(\"Author not found\");\n            }\n            this.predictions.push(prediction);\n            return prediction.toAPI();\n        } catch (error) {\n            throw new Error(`Error creating prediction: ${error.message}`);\n        }\n    }\n    // Update prediction\n    updatePrediction(id, updateData) {\n        try {\n            const prediction = this.predictions.find((p)=>p.id === parseInt(id));\n            if (!prediction) {\n                throw new Error(\"Prediction not found\");\n            }\n            prediction.update(updateData);\n            const validation = prediction.validate();\n            if (!validation.isValid) {\n                throw new Error(`Validation failed: ${validation.errors.join(\", \")}`);\n            }\n            return prediction.toAPI();\n        } catch (error) {\n            throw new Error(`Error updating prediction: ${error.message}`);\n        }\n    }\n    // Publish prediction\n    publishPrediction(id) {\n        try {\n            const prediction = this.predictions.find((p)=>p.id === parseInt(id));\n            if (!prediction) {\n                throw new Error(\"Prediction not found\");\n            }\n            prediction.publish();\n            return prediction.toAPI();\n        } catch (error) {\n            throw new Error(`Error publishing prediction: ${error.message}`);\n        }\n    }\n    // Complete prediction with result\n    completePrediction(id, result) {\n        try {\n            const prediction = this.predictions.find((p)=>p.id === parseInt(id));\n            if (!prediction) {\n                throw new Error(\"Prediction not found\");\n            }\n            prediction.complete(result);\n            return prediction.toAPI();\n        } catch (error) {\n            throw new Error(`Error completing prediction: ${error.message}`);\n        }\n    }\n    // Delete prediction\n    deletePrediction(id) {\n        try {\n            const predictionIndex = this.predictions.findIndex((p)=>p.id === parseInt(id));\n            if (predictionIndex === -1) {\n                throw new Error(\"Prediction not found\");\n            }\n            this.predictions[predictionIndex].isActive = false;\n            return {\n                success: true,\n                message: \"Prediction deleted successfully\"\n            };\n        } catch (error) {\n            throw new Error(`Error deleting prediction: ${error.message}`);\n        }\n    }\n    // Get prediction statistics\n    getStatistics() {\n        try {\n            const total = this.predictions.filter((p)=>p.isActive).length;\n            const active = this.predictions.filter((p)=>p.isActive && p.status === \"active\").length;\n            const completed = this.predictions.filter((p)=>p.isActive && p.status === \"completed\").length;\n            const winRate = completed > 0 ? (this.predictions.filter((p)=>p.isActive && p.result === \"win\").length / completed * 100).toFixed(1) : 0;\n            return {\n                total,\n                active,\n                completed,\n                winRate: `${winRate}%`\n            };\n        } catch (error) {\n            throw new Error(`Error fetching statistics: ${error.message}`);\n        }\n    }\n    // Get all authors\n    getAllAuthors() {\n        try {\n            return this.authors.filter((author)=>author.isActive).map((author)=>author.toDisplay());\n        } catch (error) {\n            throw new Error(`Error fetching authors: ${error.message}`);\n        }\n    }\n    // Get author by ID\n    getAuthorById(id) {\n        try {\n            const author = this.authors.find((a)=>a.id === parseInt(id));\n            if (!author) {\n                throw new Error(\"Author not found\");\n            }\n            return author.toDisplay();\n        } catch (error) {\n            throw new Error(`Error fetching author: ${error.message}`);\n        }\n    }\n}\nmodule.exports = PredictionController;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/controllers/predictionController.js\n");

/***/ }),

/***/ "(api)/./src/models/Author.js":
/*!******************************!*\
  !*** ./src/models/Author.js ***!
  \******************************/
/***/ ((module) => {

eval("\nclass Author {\n    constructor(id, name, email, bio, expertise, isActive = true){\n        this.id = id;\n        this.name = name;\n        this.email = email;\n        this.bio = bio;\n        this.expertise = expertise; // Array of sports/areas of expertise\n        this.isActive = isActive;\n        this.createdAt = new Date();\n        this.updatedAt = new Date();\n    }\n    // Static method to create author from data\n    static fromData(data) {\n        return new Author(data.id, data.name, data.email, data.bio, data.expertise, data.isActive);\n    }\n    // Method to update author info\n    update(updateData) {\n        Object.keys(updateData).forEach((key)=>{\n            if (this.hasOwnProperty(key) && key !== \"id\" && key !== \"createdAt\") {\n                this[key] = updateData[key];\n            }\n        });\n        this.updatedAt = new Date();\n    }\n    // Method to get author's active predictions\n    getActivePredictions(predictions) {\n        return predictions.filter((prediction)=>prediction.authorId === this.id && prediction.isActive);\n    }\n    // Method to validate author data\n    validate() {\n        const errors = [];\n        if (!this.name || this.name.trim().length < 2) {\n            errors.push(\"Name must be at least 2 characters long\");\n        }\n        if (!this.email || !this.isValidEmail(this.email)) {\n            errors.push(\"Valid email is required\");\n        }\n        if (!this.expertise || !Array.isArray(this.expertise) || this.expertise.length === 0) {\n            errors.push(\"At least one area of expertise is required\");\n        }\n        return {\n            isValid: errors.length === 0,\n            errors\n        };\n    }\n    // Helper method to validate email\n    isValidEmail(email) {\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        return emailRegex.test(email);\n    }\n    // Method to format author for display\n    toDisplay() {\n        return {\n            id: this.id,\n            name: this.name,\n            bio: this.bio,\n            expertise: this.expertise,\n            isActive: this.isActive\n        };\n    }\n}\nmodule.exports = Author;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvbW9kZWxzL0F1dGhvci5qcyIsIm1hcHBpbmdzIjoiO0FBQ0EsTUFBTUE7SUFDSkMsWUFBWUMsRUFBRSxFQUFFQyxJQUFJLEVBQUVDLEtBQUssRUFBRUMsR0FBRyxFQUFFQyxTQUFTLEVBQUVDLFdBQVcsSUFBSSxDQUFFO1FBQzVELElBQUksQ0FBQ0wsRUFBRSxHQUFHQTtRQUNWLElBQUksQ0FBQ0MsSUFBSSxHQUFHQTtRQUNaLElBQUksQ0FBQ0MsS0FBSyxHQUFHQTtRQUNiLElBQUksQ0FBQ0MsR0FBRyxHQUFHQTtRQUNYLElBQUksQ0FBQ0MsU0FBUyxHQUFHQSxXQUFXLHFDQUFxQztRQUNqRSxJQUFJLENBQUNDLFFBQVEsR0FBR0E7UUFDaEIsSUFBSSxDQUFDQyxTQUFTLEdBQUcsSUFBSUM7UUFDckIsSUFBSSxDQUFDQyxTQUFTLEdBQUcsSUFBSUQ7SUFDdkI7SUFFQSwyQ0FBMkM7SUFDM0MsT0FBT0UsU0FBU0MsSUFBSSxFQUFFO1FBQ3BCLE9BQU8sSUFBSVosT0FDVFksS0FBS1YsRUFBRSxFQUNQVSxLQUFLVCxJQUFJLEVBQ1RTLEtBQUtSLEtBQUssRUFDVlEsS0FBS1AsR0FBRyxFQUNSTyxLQUFLTixTQUFTLEVBQ2RNLEtBQUtMLFFBQVE7SUFFakI7SUFFQSwrQkFBK0I7SUFDL0JNLE9BQU9DLFVBQVUsRUFBRTtRQUNqQkMsT0FBT0MsSUFBSSxDQUFDRixZQUFZRyxPQUFPLENBQUNDLENBQUFBO1lBQzlCLElBQUksSUFBSSxDQUFDQyxjQUFjLENBQUNELFFBQVFBLFFBQVEsUUFBUUEsUUFBUSxhQUFhO2dCQUNuRSxJQUFJLENBQUNBLElBQUksR0FBR0osVUFBVSxDQUFDSSxJQUFJO1lBQzdCO1FBQ0Y7UUFDQSxJQUFJLENBQUNSLFNBQVMsR0FBRyxJQUFJRDtJQUN2QjtJQUVBLDRDQUE0QztJQUM1Q1cscUJBQXFCQyxXQUFXLEVBQUU7UUFDaEMsT0FBT0EsWUFBWUMsTUFBTSxDQUFDQyxDQUFBQSxhQUN4QkEsV0FBV0MsUUFBUSxLQUFLLElBQUksQ0FBQ3RCLEVBQUUsSUFBSXFCLFdBQVdoQixRQUFRO0lBRTFEO0lBRUEsaUNBQWlDO0lBQ2pDa0IsV0FBVztRQUNULE1BQU1DLFNBQVMsRUFBRTtRQUVqQixJQUFJLENBQUMsSUFBSSxDQUFDdkIsSUFBSSxJQUFJLElBQUksQ0FBQ0EsSUFBSSxDQUFDd0IsSUFBSSxHQUFHQyxNQUFNLEdBQUcsR0FBRztZQUM3Q0YsT0FBT0csSUFBSSxDQUFDO1FBQ2Q7UUFFQSxJQUFJLENBQUMsSUFBSSxDQUFDekIsS0FBSyxJQUFJLENBQUMsSUFBSSxDQUFDMEIsWUFBWSxDQUFDLElBQUksQ0FBQzFCLEtBQUssR0FBRztZQUNqRHNCLE9BQU9HLElBQUksQ0FBQztRQUNkO1FBRUEsSUFBSSxDQUFDLElBQUksQ0FBQ3ZCLFNBQVMsSUFBSSxDQUFDeUIsTUFBTUMsT0FBTyxDQUFDLElBQUksQ0FBQzFCLFNBQVMsS0FBSyxJQUFJLENBQUNBLFNBQVMsQ0FBQ3NCLE1BQU0sS0FBSyxHQUFHO1lBQ3BGRixPQUFPRyxJQUFJLENBQUM7UUFDZDtRQUVBLE9BQU87WUFDTEksU0FBU1AsT0FBT0UsTUFBTSxLQUFLO1lBQzNCRjtRQUNGO0lBQ0Y7SUFFQSxrQ0FBa0M7SUFDbENJLGFBQWExQixLQUFLLEVBQUU7UUFDbEIsTUFBTThCLGFBQWE7UUFDbkIsT0FBT0EsV0FBV0MsSUFBSSxDQUFDL0I7SUFDekI7SUFFQSxzQ0FBc0M7SUFDdENnQyxZQUFZO1FBQ1YsT0FBTztZQUNMbEMsSUFBSSxJQUFJLENBQUNBLEVBQUU7WUFDWEMsTUFBTSxJQUFJLENBQUNBLElBQUk7WUFDZkUsS0FBSyxJQUFJLENBQUNBLEdBQUc7WUFDYkMsV0FBVyxJQUFJLENBQUNBLFNBQVM7WUFDekJDLFVBQVUsSUFBSSxDQUFDQSxRQUFRO1FBQ3pCO0lBQ0Y7QUFDRjtBQUVBOEIsT0FBT0MsT0FBTyxHQUFHdEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93b3Jrc3BhY2UvLi9zcmMvbW9kZWxzL0F1dGhvci5qcz8wOWNmIl0sInNvdXJjZXNDb250ZW50IjpbIlxuY2xhc3MgQXV0aG9yIHtcbiAgY29uc3RydWN0b3IoaWQsIG5hbWUsIGVtYWlsLCBiaW8sIGV4cGVydGlzZSwgaXNBY3RpdmUgPSB0cnVlKSB7XG4gICAgdGhpcy5pZCA9IGlkO1xuICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgdGhpcy5lbWFpbCA9IGVtYWlsO1xuICAgIHRoaXMuYmlvID0gYmlvO1xuICAgIHRoaXMuZXhwZXJ0aXNlID0gZXhwZXJ0aXNlOyAvLyBBcnJheSBvZiBzcG9ydHMvYXJlYXMgb2YgZXhwZXJ0aXNlXG4gICAgdGhpcy5pc0FjdGl2ZSA9IGlzQWN0aXZlO1xuICAgIHRoaXMuY3JlYXRlZEF0ID0gbmV3IERhdGUoKTtcbiAgICB0aGlzLnVwZGF0ZWRBdCA9IG5ldyBEYXRlKCk7XG4gIH1cblxuICAvLyBTdGF0aWMgbWV0aG9kIHRvIGNyZWF0ZSBhdXRob3IgZnJvbSBkYXRhXG4gIHN0YXRpYyBmcm9tRGF0YShkYXRhKSB7XG4gICAgcmV0dXJuIG5ldyBBdXRob3IoXG4gICAgICBkYXRhLmlkLFxuICAgICAgZGF0YS5uYW1lLFxuICAgICAgZGF0YS5lbWFpbCxcbiAgICAgIGRhdGEuYmlvLFxuICAgICAgZGF0YS5leHBlcnRpc2UsXG4gICAgICBkYXRhLmlzQWN0aXZlXG4gICAgKTtcbiAgfVxuXG4gIC8vIE1ldGhvZCB0byB1cGRhdGUgYXV0aG9yIGluZm9cbiAgdXBkYXRlKHVwZGF0ZURhdGEpIHtcbiAgICBPYmplY3Qua2V5cyh1cGRhdGVEYXRhKS5mb3JFYWNoKGtleSA9PiB7XG4gICAgICBpZiAodGhpcy5oYXNPd25Qcm9wZXJ0eShrZXkpICYmIGtleSAhPT0gJ2lkJyAmJiBrZXkgIT09ICdjcmVhdGVkQXQnKSB7XG4gICAgICAgIHRoaXNba2V5XSA9IHVwZGF0ZURhdGFba2V5XTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICB0aGlzLnVwZGF0ZWRBdCA9IG5ldyBEYXRlKCk7XG4gIH1cblxuICAvLyBNZXRob2QgdG8gZ2V0IGF1dGhvcidzIGFjdGl2ZSBwcmVkaWN0aW9uc1xuICBnZXRBY3RpdmVQcmVkaWN0aW9ucyhwcmVkaWN0aW9ucykge1xuICAgIHJldHVybiBwcmVkaWN0aW9ucy5maWx0ZXIocHJlZGljdGlvbiA9PiBcbiAgICAgIHByZWRpY3Rpb24uYXV0aG9ySWQgPT09IHRoaXMuaWQgJiYgcHJlZGljdGlvbi5pc0FjdGl2ZVxuICAgICk7XG4gIH1cblxuICAvLyBNZXRob2QgdG8gdmFsaWRhdGUgYXV0aG9yIGRhdGFcbiAgdmFsaWRhdGUoKSB7XG4gICAgY29uc3QgZXJyb3JzID0gW107XG4gICAgXG4gICAgaWYgKCF0aGlzLm5hbWUgfHwgdGhpcy5uYW1lLnRyaW0oKS5sZW5ndGggPCAyKSB7XG4gICAgICBlcnJvcnMucHVzaCgnTmFtZSBtdXN0IGJlIGF0IGxlYXN0IDIgY2hhcmFjdGVycyBsb25nJyk7XG4gICAgfVxuICAgIFxuICAgIGlmICghdGhpcy5lbWFpbCB8fCAhdGhpcy5pc1ZhbGlkRW1haWwodGhpcy5lbWFpbCkpIHtcbiAgICAgIGVycm9ycy5wdXNoKCdWYWxpZCBlbWFpbCBpcyByZXF1aXJlZCcpO1xuICAgIH1cbiAgICBcbiAgICBpZiAoIXRoaXMuZXhwZXJ0aXNlIHx8ICFBcnJheS5pc0FycmF5KHRoaXMuZXhwZXJ0aXNlKSB8fCB0aGlzLmV4cGVydGlzZS5sZW5ndGggPT09IDApIHtcbiAgICAgIGVycm9ycy5wdXNoKCdBdCBsZWFzdCBvbmUgYXJlYSBvZiBleHBlcnRpc2UgaXMgcmVxdWlyZWQnKTtcbiAgICB9XG4gICAgXG4gICAgcmV0dXJuIHtcbiAgICAgIGlzVmFsaWQ6IGVycm9ycy5sZW5ndGggPT09IDAsXG4gICAgICBlcnJvcnNcbiAgICB9O1xuICB9XG5cbiAgLy8gSGVscGVyIG1ldGhvZCB0byB2YWxpZGF0ZSBlbWFpbFxuICBpc1ZhbGlkRW1haWwoZW1haWwpIHtcbiAgICBjb25zdCBlbWFpbFJlZ2V4ID0gL15bXlxcc0BdK0BbXlxcc0BdK1xcLlteXFxzQF0rJC87XG4gICAgcmV0dXJuIGVtYWlsUmVnZXgudGVzdChlbWFpbCk7XG4gIH1cblxuICAvLyBNZXRob2QgdG8gZm9ybWF0IGF1dGhvciBmb3IgZGlzcGxheVxuICB0b0Rpc3BsYXkoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGlkOiB0aGlzLmlkLFxuICAgICAgbmFtZTogdGhpcy5uYW1lLFxuICAgICAgYmlvOiB0aGlzLmJpbyxcbiAgICAgIGV4cGVydGlzZTogdGhpcy5leHBlcnRpc2UsXG4gICAgICBpc0FjdGl2ZTogdGhpcy5pc0FjdGl2ZVxuICAgIH07XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBBdXRob3I7XG4iXSwibmFtZXMiOlsiQXV0aG9yIiwiY29uc3RydWN0b3IiLCJpZCIsIm5hbWUiLCJlbWFpbCIsImJpbyIsImV4cGVydGlzZSIsImlzQWN0aXZlIiwiY3JlYXRlZEF0IiwiRGF0ZSIsInVwZGF0ZWRBdCIsImZyb21EYXRhIiwiZGF0YSIsInVwZGF0ZSIsInVwZGF0ZURhdGEiLCJPYmplY3QiLCJrZXlzIiwiZm9yRWFjaCIsImtleSIsImhhc093blByb3BlcnR5IiwiZ2V0QWN0aXZlUHJlZGljdGlvbnMiLCJwcmVkaWN0aW9ucyIsImZpbHRlciIsInByZWRpY3Rpb24iLCJhdXRob3JJZCIsInZhbGlkYXRlIiwiZXJyb3JzIiwidHJpbSIsImxlbmd0aCIsInB1c2giLCJpc1ZhbGlkRW1haWwiLCJBcnJheSIsImlzQXJyYXkiLCJpc1ZhbGlkIiwiZW1haWxSZWdleCIsInRlc3QiLCJ0b0Rpc3BsYXkiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./src/models/Author.js\n");

/***/ }),

/***/ "(api)/./src/models/Prediction.js":
/*!**********************************!*\
  !*** ./src/models/Prediction.js ***!
  \**********************************/
/***/ ((module) => {

eval("\nclass Prediction {\n    constructor(id, title, content, authorId, sport, matchDetails, confidence, status = \"pending\"){\n        this.id = id;\n        this.title = title;\n        this.content = content;\n        this.authorId = authorId;\n        this.sport = sport;\n        this.matchDetails = matchDetails; // Object with home, away, date, etc.\n        this.confidence = confidence; // Percentage (0-100)\n        this.status = status; // pending, active, completed, cancelled\n        this.result = null; // win, loss, draw (set after match completion)\n        this.isActive = true;\n        this.createdAt = new Date();\n        this.updatedAt = new Date();\n        this.publishedAt = null;\n    }\n    // Static method to create prediction from data\n    static fromData(data) {\n        const prediction = new Prediction(data.id, data.title, data.content, data.authorId, data.sport, data.matchDetails, data.confidence, data.status);\n        if (data.result) prediction.result = data.result;\n        if (data.publishedAt) prediction.publishedAt = new Date(data.publishedAt);\n        if (data.createdAt) prediction.createdAt = new Date(data.createdAt);\n        if (data.updatedAt) prediction.updatedAt = new Date(data.updatedAt);\n        return prediction;\n    }\n    // Method to update prediction\n    update(updateData) {\n        Object.keys(updateData).forEach((key)=>{\n            if (this.hasOwnProperty(key) && key !== \"id\" && key !== \"createdAt\") {\n                this[key] = updateData[key];\n            }\n        });\n        this.updatedAt = new Date();\n    }\n    // Method to publish prediction\n    publish() {\n        this.status = \"active\";\n        this.publishedAt = new Date();\n        this.updatedAt = new Date();\n    }\n    // Method to complete prediction with result\n    complete(result) {\n        if ([\n            \"win\",\n            \"loss\",\n            \"draw\"\n        ].includes(result)) {\n            this.result = result;\n            this.status = \"completed\";\n            this.updatedAt = new Date();\n        }\n    }\n    // Method to validate prediction data\n    validate() {\n        const errors = [];\n        if (!this.title || this.title.trim().length < 5) {\n            errors.push(\"Title must be at least 5 characters long\");\n        }\n        if (!this.content || this.content.trim().length < 20) {\n            errors.push(\"Content must be at least 20 characters long\");\n        }\n        if (!this.authorId) {\n            errors.push(\"Author ID is required\");\n        }\n        if (!this.sport || this.sport.trim().length < 2) {\n            errors.push(\"Sport is required\");\n        }\n        if (!this.matchDetails || !this.matchDetails.home || !this.matchDetails.away) {\n            errors.push(\"Match details with home and away teams are required\");\n        }\n        if (this.confidence < 0 || this.confidence > 100) {\n            errors.push(\"Confidence must be between 0 and 100\");\n        }\n        return {\n            isValid: errors.length === 0,\n            errors\n        };\n    }\n    // Method to format prediction for API response\n    toAPI() {\n        return {\n            id: this.id,\n            title: this.title,\n            content: this.content,\n            sport: this.sport,\n            matchDetails: this.matchDetails,\n            confidence: this.confidence,\n            status: this.status,\n            result: this.result,\n            publishedAt: this.publishedAt,\n            createdAt: this.createdAt\n        };\n    }\n    // Method to format prediction for display\n    toDisplay() {\n        return {\n            id: this.id,\n            title: this.title,\n            content: this.content,\n            sport: this.sport,\n            match: `${this.matchDetails.home} vs ${this.matchDetails.away}`,\n            confidence: `${this.confidence}%`,\n            status: this.status,\n            publishedAt: this.publishedAt ? this.publishedAt.toLocaleDateString() : null\n        };\n    }\n}\nmodule.exports = Prediction;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QSwwQ0FBMEM7SUFDMUMwQixZQUFZO1FBQ1YsT0FBTztZQUNMcEMsSUFBSSxJQUFJLENBQUNBLEVBQUU7WUFDWEMsT0FBTyxJQUFJLENBQUNBLEtBQUs7WUFDakJDLFNBQVMsSUFBSSxDQUFDQSxPQUFPO1lBQ3JCRSxPQUFPLElBQUksQ0FBQ0EsS0FBSztZQUNqQmlDLE9BQU8sQ0FBQyxFQUFFLElBQUksQ0FBQ2hDLFlBQVksQ0FBQzJCLElBQUksQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDM0IsWUFBWSxDQUFDNEIsSUFBSSxDQUFDLENBQUM7WUFDL0QzQixZQUFZLENBQUMsRUFBRSxJQUFJLENBQUNBLFVBQVUsQ0FBQyxDQUFDLENBQUM7WUFDakNDLFFBQVEsSUFBSSxDQUFDQSxNQUFNO1lBQ25CTSxhQUFhLElBQUksQ0FBQ0EsV0FBVyxHQUFHLElBQUksQ0FBQ0EsV0FBVyxDQUFDeUIsa0JBQWtCLEtBQUs7UUFDMUU7SUFDRjtBQUNGO0FBRUFDLE9BQU9DLE9BQU8sR0FBRzFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd29ya3NwYWNlLy4vc3JjL21vZGVscy9QcmVkaWN0aW9uLmpzP2IyMDMiXSwic291cmNlc0NvbnRlbnQiOlsiXG5jbGFzcyBQcmVkaWN0aW9uIHtcbiAgY29uc3RydWN0b3IoaWQsIHRpdGxlLCBjb250ZW50LCBhdXRob3JJZCwgc3BvcnQsIG1hdGNoRGV0YWlscywgY29uZmlkZW5jZSwgc3RhdHVzID0gJ3BlbmRpbmcnKSB7XG4gICAgdGhpcy5pZCA9IGlkO1xuICAgIHRoaXMudGl0bGUgPSB0aXRsZTtcbiAgICB0aGlzLmNvbnRlbnQgPSBjb250ZW50O1xuICAgIHRoaXMuYXV0aG9ySWQgPSBhdXRob3JJZDtcbiAgICB0aGlzLnNwb3J0ID0gc3BvcnQ7XG4gICAgdGhpcy5tYXRjaERldGFpbHMgPSBtYXRjaERldGFpbHM7IC8vIE9iamVjdCB3aXRoIGhvbWUsIGF3YXksIGRhdGUsIGV0Yy5cbiAgICB0aGlzLmNvbmZpZGVuY2UgPSBjb25maWRlbmNlOyAvLyBQZXJjZW50YWdlICgwLTEwMClcbiAgICB0aGlzLnN0YXR1cyA9IHN0YXR1czsgLy8gcGVuZGluZywgYWN0aXZlLCBjb21wbGV0ZWQsIGNhbmNlbGxlZFxuICAgIHRoaXMucmVzdWx0ID0gbnVsbDsgLy8gd2luLCBsb3NzLCBkcmF3IChzZXQgYWZ0ZXIgbWF0Y2ggY29tcGxldGlvbilcbiAgICB0aGlzLmlzQWN0aXZlID0gdHJ1ZTtcbiAgICB0aGlzLmNyZWF0ZWRBdCA9IG5ldyBEYXRlKCk7XG4gICAgdGhpcy51cGRhdGVkQXQgPSBuZXcgRGF0ZSgpO1xuICAgIHRoaXMucHVibGlzaGVkQXQgPSBudWxsO1xuICB9XG5cbiAgLy8gU3RhdGljIG1ldGhvZCB0byBjcmVhdGUgcHJlZGljdGlvbiBmcm9tIGRhdGFcbiAgc3RhdGljIGZyb21EYXRhKGRhdGEpIHtcbiAgICBjb25zdCBwcmVkaWN0aW9uID0gbmV3IFByZWRpY3Rpb24oXG4gICAgICBkYXRhLmlkLFxuICAgICAgZGF0YS50aXRsZSxcbiAgICAgIGRhdGEuY29udGVudCxcbiAgICAgIGRhdGEuYXV0aG9ySWQsXG4gICAgICBkYXRhLnNwb3J0LFxuICAgICAgZGF0YS5tYXRjaERldGFpbHMsXG4gICAgICBkYXRhLmNvbmZpZGVuY2UsXG4gICAgICBkYXRhLnN0YXR1c1xuICAgICk7XG4gICAgXG4gICAgaWYgKGRhdGEucmVzdWx0KSBwcmVkaWN0aW9uLnJlc3VsdCA9IGRhdGEucmVzdWx0O1xuICAgIGlmIChkYXRhLnB1Ymxpc2hlZEF0KSBwcmVkaWN0aW9uLnB1Ymxpc2hlZEF0ID0gbmV3IERhdGUoZGF0YS5wdWJsaXNoZWRBdCk7XG4gICAgaWYgKGRhdGEuY3JlYXRlZEF0KSBwcmVkaWN0aW9uLmNyZWF0ZWRBdCA9IG5ldyBEYXRlKGRhdGEuY3JlYXRlZEF0KTtcbiAgICBpZiAoZGF0YS51cGRhdGVkQXQpIHByZWRpY3Rpb24udXBkYXRlZEF0ID0gbmV3IERhdGUoZGF0YS51cGRhdGVkQXQpO1xuICAgIFxuICAgIHJldHVybiBwcmVkaWN0aW9uO1xuICB9XG5cbiAgLy8gTWV0aG9kIHRvIHVwZGF0ZSBwcmVkaWN0aW9uXG4gIHVwZGF0ZSh1cGRhdGVEYXRhKSB7XG4gICAgT2JqZWN0LmtleXModXBkYXRlRGF0YSkuZm9yRWFjaChrZXkgPT4ge1xuICAgICAgaWYgKHRoaXMuaGFzT3duUHJvcGVydHkoa2V5KSAmJiBrZXkgIT09ICdpZCcgJiYga2V5ICE9PSAnY3JlYXRlZEF0Jykge1xuICAgICAgICB0aGlzW2tleV0gPSB1cGRhdGVEYXRhW2tleV07XG4gICAgICB9XG4gICAgfSk7XG4gICAgdGhpcy51cGRhdGVkQXQgPSBuZXcgRGF0ZSgpO1xuICB9XG5cbiAgLy8gTWV0aG9kIHRvIHB1Ymxpc2ggcHJlZGljdGlvblxuICBwdWJsaXNoKCkge1xuICAgIHRoaXMuc3RhdHVzID0gJ2FjdGl2ZSc7XG4gICAgdGhpcy5wdWJsaXNoZWRBdCA9IG5ldyBEYXRlKCk7XG4gICAgdGhpcy51cGRhdGVkQXQgPSBuZXcgRGF0ZSgpO1xuICB9XG5cbiAgLy8gTWV0aG9kIHRvIGNvbXBsZXRlIHByZWRpY3Rpb24gd2l0aCByZXN1bHRcbiAgY29tcGxldGUocmVzdWx0KSB7XG4gICAgaWYgKFsnd2luJywgJ2xvc3MnLCAnZHJhdyddLmluY2x1ZGVzKHJlc3VsdCkpIHtcbiAgICAgIHRoaXMucmVzdWx0ID0gcmVzdWx0O1xuICAgICAgdGhpcy5zdGF0dXMgPSAnY29tcGxldGVkJztcbiAgICAgIHRoaXMudXBkYXRlZEF0ID0gbmV3IERhdGUoKTtcbiAgICB9XG4gIH1cblxuICAvLyBNZXRob2QgdG8gdmFsaWRhdGUgcHJlZGljdGlvbiBkYXRhXG4gIHZhbGlkYXRlKCkge1xuICAgIGNvbnN0IGVycm9ycyA9IFtdO1xuICAgIFxuICAgIGlmICghdGhpcy50aXRsZSB8fCB0aGlzLnRpdGxlLnRyaW0oKS5sZW5ndGggPCA1KSB7XG4gICAgICBlcnJvcnMucHVzaCgnVGl0bGUgbXVzdCBiZSBhdCBsZWFzdCA1IGNoYXJhY3RlcnMgbG9uZycpO1xuICAgIH1cbiAgICBcbiAgICBpZiAoIXRoaXMuY29udGVudCB8fCB0aGlzLmNvbnRlbnQudHJpbSgpLmxlbmd0aCA8IDIwKSB7XG4gICAgICBlcnJvcnMucHVzaCgnQ29udGVudCBtdXN0IGJlIGF0IGxlYXN0IDIwIGNoYXJhY3RlcnMgbG9uZycpO1xuICAgIH1cbiAgICBcbiAgICBpZiAoIXRoaXMuYXV0aG9ySWQpIHtcbiAgICAgIGVycm9ycy5wdXNoKCdBdXRob3IgSUQgaXMgcmVxdWlyZWQnKTtcbiAgICB9XG4gICAgXG4gICAgaWYgKCF0aGlzLnNwb3J0IHx8IHRoaXMuc3BvcnQudHJpbSgpLmxlbmd0aCA8IDIpIHtcbiAgICAgIGVycm9ycy5wdXNoKCdTcG9ydCBpcyByZXF1aXJlZCcpO1xuICAgIH1cbiAgICBcbiAgICBpZiAoIXRoaXMubWF0Y2hEZXRhaWxzIHx8ICF0aGlzLm1hdGNoRGV0YWlscy5ob21lIHx8ICF0aGlzLm1hdGNoRGV0YWlscy5hd2F5KSB7XG4gICAgICBlcnJvcnMucHVzaCgnTWF0Y2ggZGV0YWlscyB3aXRoIGhvbWUgYW5kIGF3YXkgdGVhbXMgYXJlIHJlcXVpcmVkJyk7XG4gICAgfVxuICAgIFxuICAgIGlmICh0aGlzLmNvbmZpZGVuY2UgPCAwIHx8IHRoaXMuY29uZmlkZW5jZSA+IDEwMCkge1xuICAgICAgZXJyb3JzLnB1c2goJ0NvbmZpZGVuY2UgbXVzdCBiZSBiZXR3ZWVuIDAgYW5kIDEwMCcpO1xuICAgIH1cbiAgICBcbiAgICByZXR1cm4ge1xuICAgICAgaXNWYWxpZDogZXJyb3JzLmxlbmd0aCA9PT0gMCxcbiAgICAgIGVycm9yc1xuICAgIH07XG4gIH1cblxuICAvLyBNZXRob2QgdG8gZm9ybWF0IHByZWRpY3Rpb24gZm9yIEFQSSByZXNwb25zZVxuICB0b0FQSSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgaWQ6IHRoaXMuaWQsXG4gICAgICB0aXRsZTogdGhpcy50aXRsZSxcbiAgICAgIGNvbnRlbnQ6IHRoaXMuY29udGVudCxcbiAgICAgIHNwb3J0OiB0aGlzLnNwb3J0LFxuICAgICAgbWF0Y2hEZXRhaWxzOiB0aGlzLm1hdGNoRGV0YWlscyxcbiAgICAgIGNvbmZpZGVuY2U6IHRoaXMuY29uZmlkZW5jZSxcbiAgICAgIHN0YXR1czogdGhpcy5zdGF0dXMsXG4gICAgICByZXN1bHQ6IHRoaXMucmVzdWx0LFxuICAgICAgcHVibGlzaGVkQXQ6IHRoaXMucHVibGlzaGVkQXQsXG4gICAgICBjcmVhdGVkQXQ6IHRoaXMuY3JlYXRlZEF0XG4gICAgfTtcbiAgfVxuXG4gIC8vIE1ldGhvZCB0byBmb3JtYXQgcHJlZGljdGlvbiBmb3IgZGlzcGxheVxuICB0b0Rpc3BsYXkoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGlkOiB0aGlzLmlkLFxuICAgICAgdGl0bGU6IHRoaXMudGl0bGUsXG4gICAgICBjb250ZW50OiB0aGlzLmNvbnRlbnQsXG4gICAgICBzcG9ydDogdGhpcy5zcG9ydCxcbiAgICAgIG1hdGNoOiBgJHt0aGlzLm1hdGNoRGV0YWlscy5ob21lfSB2cyAke3RoaXMubWF0Y2hEZXRhaWxzLmF3YXl9YCxcbiAgICAgIGNvbmZpZGVuY2U6IGAke3RoaXMuY29uZmlkZW5jZX0lYCxcbiAgICAgIHN0YXR1czogdGhpcy5zdGF0dXMsXG4gICAgICBwdWJsaXNoZWRBdDogdGhpcy5wdWJsaXNoZWRBdCA/IHRoaXMucHVibGlzaGVkQXQudG9Mb2NhbGVEYXRlU3RyaW5nKCkgOiBudWxsXG4gICAgfTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFByZWRpY3Rpb247XG4iXSwibmFtZXMiOlsiUHJlZGljdGlvbiIsImNvbnN0cnVjdG9yIiwiaWQiLCJ0aXRsZSIsImNvbnRlbnQiLCJhdXRob3JJZCIsInNwb3J0IiwibWF0Y2hEZXRhaWxzIiwiY29uZmlkZW5jZSIsInN0YXR1cyIsInJlc3VsdCIsImlzQWN0aXZlIiwiY3JlYXRlZEF0IiwiRGF0ZSIsInVwZGF0ZWRBdCIsInB1Ymxpc2hlZEF0IiwiZnJvbURhdGEiLCJkYXRhIiwicHJlZGljdGlvbiIsInVwZGF0ZSIsInVwZGF0ZURhdGEiLCJPYmplY3QiLCJrZXlzIiwiZm9yRWFjaCIsImtleSIsImhhc093blByb3BlcnR5IiwicHVibGlzaCIsImNvbXBsZXRlIiwiaW5jbHVkZXMiLCJ2YWxpZGF0ZSIsImVycm9ycyIsInRyaW0iLCJsZW5ndGgiLCJwdXNoIiwiaG9tZSIsImF3YXkiLCJpc1ZhbGlkIiwidG9BUEkiLCJ0b0Rpc3BsYXkiLCJtYXRjaCIsInRvTG9jYWxlRGF0ZVN0cmluZyIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./src/models/Prediction.js\n");

/***/ }),

/***/ "(api)/./src/pages/api/predictions.ts":
/*!**************************************!*\
  !*** ./src/pages/api/predictions.ts ***!
  \**************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _services_predictionsService__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../services/predictionsService */ \"(api)/./src/services/predictionsService.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_services_predictionsService__WEBPACK_IMPORTED_MODULE_0__]);\n_services_predictionsService__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n// Import the controller (will be converted to TypeScript later)\nconst PredictionController = __webpack_require__(/*! ../../controllers/predictionController */ \"(api)/./src/controllers/predictionController.js\");\nconst predictionController = new PredictionController();\nasync function handler(req, res) {\n    if (req.method === \"GET\") {\n        try {\n            // Get external predictions from scraping\n            const externalPredictions = await (0,_services_predictionsService__WEBPACK_IMPORTED_MODULE_0__.fetchPredictions)();\n            // Get internal predictions from controller\n            const internalPredictions = predictionController.getAllPredictions();\n            // Combine both sources\n            const allPredictions = [\n                ...internalPredictions.map((p)=>({\n                        title: p.title,\n                        content: p.content,\n                        source: \"internal\",\n                        sport: p.sport,\n                        confidence: `${p.confidence}%`\n                    })),\n                ...externalPredictions.map((p)=>({\n                        title: p.title,\n                        content: p.content || \"External prediction\",\n                        source: \"external\",\n                        sport: \"Football\",\n                        confidence: \"N/A\"\n                    }))\n            ];\n            res.status(200).json(allPredictions);\n        } catch (error) {\n            console.error(\"Error fetching predictions:\", error);\n            res.status(500).json({\n                error: \"Failed to fetch predictions\"\n            });\n        }\n    } else if (req.method === \"POST\") {\n        try {\n            const newPrediction = predictionController.createPrediction(req.body);\n            res.status(201).json(newPrediction);\n        } catch (error) {\n            console.error(\"Error creating prediction:\", error);\n            res.status(400).json({\n                error: error.message\n            });\n        }\n    } else {\n        res.setHeader(\"Allow\", [\n            \"GET\",\n            \"POST\"\n        ]);\n        res.status(405).end(`Method ${req.method} Not Allowed`);\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvcGFnZXMvYXBpL3ByZWRpY3Rpb25zLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBRXFFO0FBRXJFLGdFQUFnRTtBQUNoRSxNQUFNQyx1QkFBdUJDLG1CQUFPQSxDQUFDO0FBRXJDLE1BQU1DLHVCQUF1QixJQUFJRjtBQUVsQixlQUFlRyxRQUFRQyxHQUFtQixFQUFFQyxHQUFvQjtJQUM3RSxJQUFJRCxJQUFJRSxNQUFNLEtBQUssT0FBTztRQUN4QixJQUFJO1lBQ0YseUNBQXlDO1lBQ3pDLE1BQU1DLHNCQUFzQixNQUFNUiw4RUFBZ0JBO1lBRWxELDJDQUEyQztZQUMzQyxNQUFNUyxzQkFBc0JOLHFCQUFxQk8saUJBQWlCO1lBRWxFLHVCQUF1QjtZQUN2QixNQUFNQyxpQkFBaUI7bUJBQ2xCRixvQkFBb0JHLEdBQUcsQ0FBQ0MsQ0FBQUEsSUFBTTt3QkFDL0JDLE9BQU9ELEVBQUVDLEtBQUs7d0JBQ2RDLFNBQVNGLEVBQUVFLE9BQU87d0JBQ2xCQyxRQUFRO3dCQUNSQyxPQUFPSixFQUFFSSxLQUFLO3dCQUNkQyxZQUFZLENBQUMsRUFBRUwsRUFBRUssVUFBVSxDQUFDLENBQUMsQ0FBQztvQkFDaEM7bUJBQ0dWLG9CQUFvQkksR0FBRyxDQUFDQyxDQUFBQSxJQUFNO3dCQUMvQkMsT0FBT0QsRUFBRUMsS0FBSzt3QkFDZEMsU0FBU0YsRUFBRUUsT0FBTyxJQUFJO3dCQUN0QkMsUUFBUTt3QkFDUkMsT0FBTzt3QkFDUEMsWUFBWTtvQkFDZDthQUNEO1lBRURaLElBQUlhLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUNUO1FBQ3ZCLEVBQUUsT0FBT1UsT0FBTztZQUNkQyxRQUFRRCxLQUFLLENBQUMsK0JBQStCQTtZQUM3Q2YsSUFBSWEsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztnQkFBRUMsT0FBTztZQUE4QjtRQUM5RDtJQUNGLE9BQU8sSUFBSWhCLElBQUlFLE1BQU0sS0FBSyxRQUFRO1FBQ2hDLElBQUk7WUFDRixNQUFNZ0IsZ0JBQWdCcEIscUJBQXFCcUIsZ0JBQWdCLENBQUNuQixJQUFJb0IsSUFBSTtZQUNwRW5CLElBQUlhLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUNHO1FBQ3ZCLEVBQUUsT0FBT0YsT0FBTztZQUNkQyxRQUFRRCxLQUFLLENBQUMsOEJBQThCQTtZQUM1Q2YsSUFBSWEsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztnQkFBRUMsT0FBT0EsTUFBTUssT0FBTztZQUFDO1FBQzlDO0lBQ0YsT0FBTztRQUNMcEIsSUFBSXFCLFNBQVMsQ0FBQyxTQUFTO1lBQUM7WUFBTztTQUFPO1FBQ3RDckIsSUFBSWEsTUFBTSxDQUFDLEtBQUtTLEdBQUcsQ0FBQyxDQUFDLE9BQU8sRUFBRXZCLElBQUlFLE1BQU0sQ0FBQyxZQUFZLENBQUM7SUFDeEQ7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL3dvcmtzcGFjZS8uL3NyYy9wYWdlcy9hcGkvcHJlZGljdGlvbnMudHM/YjQyMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IE5leHRBcGlSZXF1ZXN0LCBOZXh0QXBpUmVzcG9uc2UgfSBmcm9tICduZXh0JztcbmltcG9ydCB7IGZldGNoUHJlZGljdGlvbnMgfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy9wcmVkaWN0aW9uc1NlcnZpY2UnO1xuXG4vLyBJbXBvcnQgdGhlIGNvbnRyb2xsZXIgKHdpbGwgYmUgY29udmVydGVkIHRvIFR5cGVTY3JpcHQgbGF0ZXIpXG5jb25zdCBQcmVkaWN0aW9uQ29udHJvbGxlciA9IHJlcXVpcmUoJy4uLy4uL2NvbnRyb2xsZXJzL3ByZWRpY3Rpb25Db250cm9sbGVyJyk7XG5cbmNvbnN0IHByZWRpY3Rpb25Db250cm9sbGVyID0gbmV3IFByZWRpY3Rpb25Db250cm9sbGVyKCk7XG5cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIGhhbmRsZXIocmVxOiBOZXh0QXBpUmVxdWVzdCwgcmVzOiBOZXh0QXBpUmVzcG9uc2UpIHtcbiAgaWYgKHJlcS5tZXRob2QgPT09ICdHRVQnKSB7XG4gICAgdHJ5IHtcbiAgICAgIC8vIEdldCBleHRlcm5hbCBwcmVkaWN0aW9ucyBmcm9tIHNjcmFwaW5nXG4gICAgICBjb25zdCBleHRlcm5hbFByZWRpY3Rpb25zID0gYXdhaXQgZmV0Y2hQcmVkaWN0aW9ucygpO1xuICAgICAgXG4gICAgICAvLyBHZXQgaW50ZXJuYWwgcHJlZGljdGlvbnMgZnJvbSBjb250cm9sbGVyXG4gICAgICBjb25zdCBpbnRlcm5hbFByZWRpY3Rpb25zID0gcHJlZGljdGlvbkNvbnRyb2xsZXIuZ2V0QWxsUHJlZGljdGlvbnMoKTtcbiAgICAgIFxuICAgICAgLy8gQ29tYmluZSBib3RoIHNvdXJjZXNcbiAgICAgIGNvbnN0IGFsbFByZWRpY3Rpb25zID0gW1xuICAgICAgICAuLi5pbnRlcm5hbFByZWRpY3Rpb25zLm1hcChwID0+ICh7IFxuICAgICAgICAgIHRpdGxlOiBwLnRpdGxlLCBcbiAgICAgICAgICBjb250ZW50OiBwLmNvbnRlbnQsXG4gICAgICAgICAgc291cmNlOiAnaW50ZXJuYWwnLFxuICAgICAgICAgIHNwb3J0OiBwLnNwb3J0LFxuICAgICAgICAgIGNvbmZpZGVuY2U6IGAke3AuY29uZmlkZW5jZX0lYFxuICAgICAgICB9KSksXG4gICAgICAgIC4uLmV4dGVybmFsUHJlZGljdGlvbnMubWFwKHAgPT4gKHsgXG4gICAgICAgICAgdGl0bGU6IHAudGl0bGUsIFxuICAgICAgICAgIGNvbnRlbnQ6IHAuY29udGVudCB8fCAnRXh0ZXJuYWwgcHJlZGljdGlvbicsXG4gICAgICAgICAgc291cmNlOiAnZXh0ZXJuYWwnLFxuICAgICAgICAgIHNwb3J0OiAnRm9vdGJhbGwnLFxuICAgICAgICAgIGNvbmZpZGVuY2U6ICdOL0EnXG4gICAgICAgIH0pKVxuICAgICAgXTtcbiAgICAgIFxuICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24oYWxsUHJlZGljdGlvbnMpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBmZXRjaGluZyBwcmVkaWN0aW9uczonLCBlcnJvcik7XG4gICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7IGVycm9yOiAnRmFpbGVkIHRvIGZldGNoIHByZWRpY3Rpb25zJyB9KTtcbiAgICB9XG4gIH0gZWxzZSBpZiAocmVxLm1ldGhvZCA9PT0gJ1BPU1QnKSB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IG5ld1ByZWRpY3Rpb24gPSBwcmVkaWN0aW9uQ29udHJvbGxlci5jcmVhdGVQcmVkaWN0aW9uKHJlcS5ib2R5KTtcbiAgICAgIHJlcy5zdGF0dXMoMjAxKS5qc29uKG5ld1ByZWRpY3Rpb24pO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBjcmVhdGluZyBwcmVkaWN0aW9uOicsIGVycm9yKTtcbiAgICAgIHJlcy5zdGF0dXMoNDAwKS5qc29uKHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIHJlcy5zZXRIZWFkZXIoJ0FsbG93JywgWydHRVQnLCAnUE9TVCddKTtcbiAgICByZXMuc3RhdHVzKDQwNSkuZW5kKGBNZXRob2QgJHtyZXEubWV0aG9kfSBOb3QgQWxsb3dlZGApO1xuICB9XG59XG4iXSwibmFtZXMiOlsiZmV0Y2hQcmVkaWN0aW9ucyIsIlByZWRpY3Rpb25Db250cm9sbGVyIiwicmVxdWlyZSIsInByZWRpY3Rpb25Db250cm9sbGVyIiwiaGFuZGxlciIsInJlcSIsInJlcyIsIm1ldGhvZCIsImV4dGVybmFsUHJlZGljdGlvbnMiLCJpbnRlcm5hbFByZWRpY3Rpb25zIiwiZ2V0QWxsUHJlZGljdGlvbnMiLCJhbGxQcmVkaWN0aW9ucyIsIm1hcCIsInAiLCJ0aXRsZSIsImNvbnRlbnQiLCJzb3VyY2UiLCJzcG9ydCIsImNvbmZpZGVuY2UiLCJzdGF0dXMiLCJqc29uIiwiZXJyb3IiLCJjb25zb2xlIiwibmV3UHJlZGljdGlvbiIsImNyZWF0ZVByZWRpY3Rpb24iLCJib2R5IiwibWVzc2FnZSIsInNldEhlYWRlciIsImVuZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/predictions.ts\n");

/***/ }),

/***/ "(api)/./src/services/predictionsService.ts":
/*!********************************************!*\
  !*** ./src/services/predictionsService.ts ***!
  \********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchPredictions: () => (/* binding */ fetchPredictions),\n/* harmony export */   prefetchPredictions: () => (/* binding */ prefetchPredictions)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"axios\");\n/* harmony import */ var jsdom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jsdom */ \"jsdom\");\n/* harmony import */ var jsdom__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(jsdom__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_cacheManager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/cacheManager */ \"(api)/./src/utils/cacheManager.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([axios__WEBPACK_IMPORTED_MODULE_0__]);\naxios__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\nasync function fetchPredictions() {\n    const cacheKey = \"predictions_data\";\n    // Try cache first\n    const cached = _utils_cacheManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get(cacheKey);\n    if (cached) {\n        console.log(\"Returning cached predictions\");\n        return cached;\n    }\n    try {\n        const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"https://www.mybets.today/recommended-soccer-predictions/tomorrow/\", {\n            timeout: 10000,\n            headers: {\n                \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36\"\n            }\n        });\n        const dom = new jsdom__WEBPACK_IMPORTED_MODULE_1__.JSDOM(response.data);\n        const document = dom.window.document;\n        // Extract predictions with enhanced data\n        const predictionElements = document.querySelectorAll(\"h2.prediction-title, .match-prediction, .bet-tip\");\n        const predictions = [];\n        predictionElements.forEach((element, index)=>{\n            const title = element.textContent?.trim();\n            if (title && title.length > 10) {\n                // Analyze confidence based on keywords\n                const confidence = analyzeConfidence(title);\n                const sport = extractSport(title);\n                predictions.push({\n                    title,\n                    content: `Analysis: ${title.substring(0, 100)}...`,\n                    sport: sport,\n                    confidence: confidence,\n                    source: \"external\"\n                });\n            }\n        });\n        // Add some internal predictions\n        const internalPredictions = generateInternalPredictions();\n        predictions.push(...internalPredictions);\n        // Cache for 10 minutes\n        _utils_cacheManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].set(cacheKey, predictions, 10);\n        return predictions;\n    } catch (error) {\n        console.error(\"Failed to fetch predictions:\", error);\n        // Return fallback data if available in cache or generate mock data\n        const fallback = _utils_cacheManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get(\"fallback_predictions\") || generateFallbackPredictions();\n        _utils_cacheManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].set(\"fallback_predictions\", fallback, 60); // Cache fallback for 1 hour\n        return fallback;\n    }\n}\nfunction analyzeConfidence(title) {\n    const highConfidenceWords = [\n        \"sure\",\n        \"guaranteed\",\n        \"certain\",\n        \"definite\"\n    ];\n    const mediumConfidenceWords = [\n        \"likely\",\n        \"probable\",\n        \"expected\"\n    ];\n    const lowerTitle = title.toLowerCase();\n    if (highConfidenceWords.some((word)=>lowerTitle.includes(word))) {\n        return \"85-95%\";\n    } else if (mediumConfidenceWords.some((word)=>lowerTitle.includes(word))) {\n        return \"65-80%\";\n    }\n    return \"50-70%\";\n}\nfunction extractSport(title) {\n    const sportsKeywords = {\n        \"soccer\": [\n            \"soccer\",\n            \"football\",\n            \"fc \",\n            \"united\",\n            \"city\"\n        ],\n        \"basketball\": [\n            \"nba\",\n            \"basketball\",\n            \"lakers\",\n            \"warriors\"\n        ],\n        \"tennis\": [\n            \"tennis\",\n            \"atp\",\n            \"wta\",\n            \"open\"\n        ],\n        \"baseball\": [\n            \"mlb\",\n            \"baseball\",\n            \"yankees\",\n            \"dodgers\"\n        ]\n    };\n    const lowerTitle = title.toLowerCase();\n    for (const [sport, keywords] of Object.entries(sportsKeywords)){\n        if (keywords.some((keyword)=>lowerTitle.includes(keyword))) {\n            return sport;\n        }\n    }\n    return \"soccer\"; // default\n}\nfunction generateInternalPredictions() {\n    return [\n        {\n            title: \"Manchester United vs Chelsea - Draw Analysis\",\n            content: \"Both teams showing similar form, defensive strengths suggest low-scoring draw\",\n            sport: \"soccer\",\n            confidence: \"75%\",\n            source: \"internal\"\n        },\n        {\n            title: \"Real Madrid vs Barcelona - Over 2.5 Goals\",\n            content: \"El Clasico traditionally high-scoring, both teams have strong attacking records\",\n            sport: \"soccer\",\n            confidence: \"80%\",\n            source: \"internal\"\n        }\n    ];\n}\nfunction generateFallbackPredictions() {\n    return [\n        {\n            title: \"Liverpool vs Arsenal - Liverpool Win\",\n            content: \"Home advantage and recent form favor Liverpool\",\n            sport: \"soccer\",\n            confidence: \"70%\",\n            source: \"fallback\"\n        },\n        {\n            title: \"Bayern Munich vs Dortmund - Over 3.5 Goals\",\n            content: \"German derbies typically feature many goals\",\n            sport: \"soccer\",\n            confidence: \"65%\",\n            source: \"fallback\"\n        }\n    ];\n}\n// Prefetch function for background loading\nasync function prefetchPredictions() {\n    try {\n        await fetchPredictions();\n        console.log(\"Predictions prefetched successfully\");\n    } catch (error) {\n        console.warn(\"Prefetch failed:\", error);\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvc2VydmljZXMvcHJlZGljdGlvbnNTZXJ2aWNlLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUMwQjtBQUNJO0FBQ21CO0FBVTFDLGVBQWVHO0lBQ3BCLE1BQU1DLFdBQVc7SUFFakIsa0JBQWtCO0lBQ2xCLE1BQU1DLFNBQVNILCtEQUFnQixDQUFDRTtJQUNoQyxJQUFJQyxRQUFRO1FBQ1ZFLFFBQVFDLEdBQUcsQ0FBQztRQUNaLE9BQU9IO0lBQ1Q7SUFFQSxJQUFJO1FBQ0YsTUFBTUksV0FBVyxNQUFNVCxpREFBUyxDQUFDLHFFQUFxRTtZQUNwR1UsU0FBUztZQUNUQyxTQUFTO2dCQUNQLGNBQWM7WUFDaEI7UUFDRjtRQUVBLE1BQU1DLE1BQU0sSUFBSVgsd0NBQUtBLENBQUNRLFNBQVNJLElBQUk7UUFDbkMsTUFBTUMsV0FBV0YsSUFBSUcsTUFBTSxDQUFDRCxRQUFRO1FBRXBDLHlDQUF5QztRQUN6QyxNQUFNRSxxQkFBcUJGLFNBQVNHLGdCQUFnQixDQUFDO1FBQ3JELE1BQU1DLGNBQTRCLEVBQUU7UUFFcENGLG1CQUFtQkcsT0FBTyxDQUFDLENBQUNDLFNBQVNDO1lBQ25DLE1BQU1DLFFBQVFGLFFBQVFHLFdBQVcsRUFBRUM7WUFDbkMsSUFBSUYsU0FBU0EsTUFBTUcsTUFBTSxHQUFHLElBQUk7Z0JBQzlCLHVDQUF1QztnQkFDdkMsTUFBTUMsYUFBYUMsa0JBQWtCTDtnQkFDckMsTUFBTU0sUUFBUUMsYUFBYVA7Z0JBRTNCSixZQUFZWSxJQUFJLENBQUM7b0JBQ2ZSO29CQUNBUyxTQUFTLENBQUMsVUFBVSxFQUFFVCxNQUFNVSxTQUFTLENBQUMsR0FBRyxLQUFLLEdBQUcsQ0FBQztvQkFDbERKLE9BQU9BO29CQUNQRixZQUFZQTtvQkFDWk8sUUFBUTtnQkFDVjtZQUNGO1FBQ0Y7UUFFQSxnQ0FBZ0M7UUFDaEMsTUFBTUMsc0JBQXNCQztRQUM1QmpCLFlBQVlZLElBQUksSUFBSUk7UUFFcEIsdUJBQXVCO1FBQ3ZCaEMsK0RBQWdCLENBQUNFLFVBQVVjLGFBQWE7UUFFeEMsT0FBT0E7SUFDVCxFQUFFLE9BQU9tQixPQUFPO1FBQ2Q5QixRQUFROEIsS0FBSyxDQUFDLGdDQUFnQ0E7UUFFOUMsbUVBQW1FO1FBQ25FLE1BQU1DLFdBQVdwQywrREFBZ0IsQ0FBQywyQkFBMkJxQztRQUM3RHJDLCtEQUFnQixDQUFDLHdCQUF3Qm9DLFVBQVUsS0FBSyw0QkFBNEI7UUFFcEYsT0FBT0E7SUFDVDtBQUNGO0FBRUEsU0FBU1gsa0JBQWtCTCxLQUFhO0lBQ3RDLE1BQU1rQixzQkFBc0I7UUFBQztRQUFRO1FBQWM7UUFBVztLQUFXO0lBQ3pFLE1BQU1DLHdCQUF3QjtRQUFDO1FBQVU7UUFBWTtLQUFXO0lBRWhFLE1BQU1DLGFBQWFwQixNQUFNcUIsV0FBVztJQUVwQyxJQUFJSCxvQkFBb0JJLElBQUksQ0FBQ0MsQ0FBQUEsT0FBUUgsV0FBV0ksUUFBUSxDQUFDRCxRQUFRO1FBQy9ELE9BQU87SUFDVCxPQUFPLElBQUlKLHNCQUFzQkcsSUFBSSxDQUFDQyxDQUFBQSxPQUFRSCxXQUFXSSxRQUFRLENBQUNELFFBQVE7UUFDeEUsT0FBTztJQUNUO0lBRUEsT0FBTztBQUNUO0FBRUEsU0FBU2hCLGFBQWFQLEtBQWE7SUFDakMsTUFBTXlCLGlCQUFpQjtRQUNyQixVQUFVO1lBQUM7WUFBVTtZQUFZO1lBQU87WUFBVTtTQUFPO1FBQ3pELGNBQWM7WUFBQztZQUFPO1lBQWM7WUFBVTtTQUFXO1FBQ3pELFVBQVU7WUFBQztZQUFVO1lBQU87WUFBTztTQUFPO1FBQzFDLFlBQVk7WUFBQztZQUFPO1lBQVk7WUFBVztTQUFVO0lBQ3ZEO0lBRUEsTUFBTUwsYUFBYXBCLE1BQU1xQixXQUFXO0lBRXBDLEtBQUssTUFBTSxDQUFDZixPQUFPb0IsU0FBUyxJQUFJQyxPQUFPQyxPQUFPLENBQUNILGdCQUFpQjtRQUM5RCxJQUFJQyxTQUFTSixJQUFJLENBQUNPLENBQUFBLFVBQVdULFdBQVdJLFFBQVEsQ0FBQ0ssV0FBVztZQUMxRCxPQUFPdkI7UUFDVDtJQUNGO0lBRUEsT0FBTyxVQUFVLFVBQVU7QUFDN0I7QUFFQSxTQUFTTztJQUNQLE9BQU87UUFDTDtZQUNFYixPQUFPO1lBQ1BTLFNBQVM7WUFDVEgsT0FBTztZQUNQRixZQUFZO1lBQ1pPLFFBQVE7UUFDVjtRQUNBO1lBQ0VYLE9BQU87WUFDUFMsU0FBUztZQUNUSCxPQUFPO1lBQ1BGLFlBQVk7WUFDWk8sUUFBUTtRQUNWO0tBQ0Q7QUFDSDtBQUVBLFNBQVNNO0lBQ1AsT0FBTztRQUNMO1lBQ0VqQixPQUFPO1lBQ1BTLFNBQVM7WUFDVEgsT0FBTztZQUNQRixZQUFZO1lBQ1pPLFFBQVE7UUFDVjtRQUNBO1lBQ0VYLE9BQU87WUFDUFMsU0FBUztZQUNUSCxPQUFPO1lBQ1BGLFlBQVk7WUFDWk8sUUFBUTtRQUNWO0tBQ0Q7QUFDSDtBQUVBLDJDQUEyQztBQUNwQyxlQUFlbUI7SUFDcEIsSUFBSTtRQUNGLE1BQU1qRDtRQUNOSSxRQUFRQyxHQUFHLENBQUM7SUFDZCxFQUFFLE9BQU82QixPQUFPO1FBQ2Q5QixRQUFROEMsSUFBSSxDQUFDLG9CQUFvQmhCO0lBQ25DO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93b3Jrc3BhY2UvLi9zcmMvc2VydmljZXMvcHJlZGljdGlvbnNTZXJ2aWNlLnRzPzQ3NTYiXSwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnO1xuaW1wb3J0IHsgSlNET00gfSBmcm9tICdqc2RvbSc7XG5pbXBvcnQgQ2FjaGVNYW5hZ2VyIGZyb20gJy4uL3V0aWxzL2NhY2hlTWFuYWdlcic7XG5cbmludGVyZmFjZSBQcmVkaWN0aW9uIHtcbiAgdGl0bGU6IHN0cmluZztcbiAgY29udGVudD86IHN0cmluZztcbiAgc3BvcnQ/OiBzdHJpbmc7XG4gIGNvbmZpZGVuY2U/OiBzdHJpbmc7XG4gIHNvdXJjZT86IHN0cmluZztcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGZldGNoUHJlZGljdGlvbnMoKTogUHJvbWlzZTxQcmVkaWN0aW9uW10+IHtcbiAgY29uc3QgY2FjaGVLZXkgPSAncHJlZGljdGlvbnNfZGF0YSc7XG4gIFxuICAvLyBUcnkgY2FjaGUgZmlyc3RcbiAgY29uc3QgY2FjaGVkID0gQ2FjaGVNYW5hZ2VyLmdldChjYWNoZUtleSk7XG4gIGlmIChjYWNoZWQpIHtcbiAgICBjb25zb2xlLmxvZygnUmV0dXJuaW5nIGNhY2hlZCBwcmVkaWN0aW9ucycpO1xuICAgIHJldHVybiBjYWNoZWQ7XG4gIH1cblxuICB0cnkge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MuZ2V0KCdodHRwczovL3d3dy5teWJldHMudG9kYXkvcmVjb21tZW5kZWQtc29jY2VyLXByZWRpY3Rpb25zL3RvbW9ycm93LycsIHtcbiAgICAgIHRpbWVvdXQ6IDEwMDAwLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICAnVXNlci1BZ2VudCc6ICdNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYnXG4gICAgICB9XG4gICAgfSk7XG4gICAgXG4gICAgY29uc3QgZG9tID0gbmV3IEpTRE9NKHJlc3BvbnNlLmRhdGEpO1xuICAgIGNvbnN0IGRvY3VtZW50ID0gZG9tLndpbmRvdy5kb2N1bWVudDtcbiAgICBcbiAgICAvLyBFeHRyYWN0IHByZWRpY3Rpb25zIHdpdGggZW5oYW5jZWQgZGF0YVxuICAgIGNvbnN0IHByZWRpY3Rpb25FbGVtZW50cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ2gyLnByZWRpY3Rpb24tdGl0bGUsIC5tYXRjaC1wcmVkaWN0aW9uLCAuYmV0LXRpcCcpO1xuICAgIGNvbnN0IHByZWRpY3Rpb25zOiBQcmVkaWN0aW9uW10gPSBbXTtcbiAgICBcbiAgICBwcmVkaWN0aW9uRWxlbWVudHMuZm9yRWFjaCgoZWxlbWVudCwgaW5kZXgpID0+IHtcbiAgICAgIGNvbnN0IHRpdGxlID0gZWxlbWVudC50ZXh0Q29udGVudD8udHJpbSgpO1xuICAgICAgaWYgKHRpdGxlICYmIHRpdGxlLmxlbmd0aCA+IDEwKSB7XG4gICAgICAgIC8vIEFuYWx5emUgY29uZmlkZW5jZSBiYXNlZCBvbiBrZXl3b3Jkc1xuICAgICAgICBjb25zdCBjb25maWRlbmNlID0gYW5hbHl6ZUNvbmZpZGVuY2UodGl0bGUpO1xuICAgICAgICBjb25zdCBzcG9ydCA9IGV4dHJhY3RTcG9ydCh0aXRsZSk7XG4gICAgICAgIFxuICAgICAgICBwcmVkaWN0aW9ucy5wdXNoKHsgXG4gICAgICAgICAgdGl0bGUsXG4gICAgICAgICAgY29udGVudDogYEFuYWx5c2lzOiAke3RpdGxlLnN1YnN0cmluZygwLCAxMDApfS4uLmAsXG4gICAgICAgICAgc3BvcnQ6IHNwb3J0LFxuICAgICAgICAgIGNvbmZpZGVuY2U6IGNvbmZpZGVuY2UsXG4gICAgICAgICAgc291cmNlOiAnZXh0ZXJuYWwnXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgLy8gQWRkIHNvbWUgaW50ZXJuYWwgcHJlZGljdGlvbnNcbiAgICBjb25zdCBpbnRlcm5hbFByZWRpY3Rpb25zID0gZ2VuZXJhdGVJbnRlcm5hbFByZWRpY3Rpb25zKCk7XG4gICAgcHJlZGljdGlvbnMucHVzaCguLi5pbnRlcm5hbFByZWRpY3Rpb25zKTtcblxuICAgIC8vIENhY2hlIGZvciAxMCBtaW51dGVzXG4gICAgQ2FjaGVNYW5hZ2VyLnNldChjYWNoZUtleSwgcHJlZGljdGlvbnMsIDEwKTtcbiAgICBcbiAgICByZXR1cm4gcHJlZGljdGlvbnM7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRmFpbGVkIHRvIGZldGNoIHByZWRpY3Rpb25zOicsIGVycm9yKTtcbiAgICBcbiAgICAvLyBSZXR1cm4gZmFsbGJhY2sgZGF0YSBpZiBhdmFpbGFibGUgaW4gY2FjaGUgb3IgZ2VuZXJhdGUgbW9jayBkYXRhXG4gICAgY29uc3QgZmFsbGJhY2sgPSBDYWNoZU1hbmFnZXIuZ2V0KCdmYWxsYmFja19wcmVkaWN0aW9ucycpIHx8IGdlbmVyYXRlRmFsbGJhY2tQcmVkaWN0aW9ucygpO1xuICAgIENhY2hlTWFuYWdlci5zZXQoJ2ZhbGxiYWNrX3ByZWRpY3Rpb25zJywgZmFsbGJhY2ssIDYwKTsgLy8gQ2FjaGUgZmFsbGJhY2sgZm9yIDEgaG91clxuICAgIFxuICAgIHJldHVybiBmYWxsYmFjaztcbiAgfVxufVxuXG5mdW5jdGlvbiBhbmFseXplQ29uZmlkZW5jZSh0aXRsZTogc3RyaW5nKTogc3RyaW5nIHtcbiAgY29uc3QgaGlnaENvbmZpZGVuY2VXb3JkcyA9IFsnc3VyZScsICdndWFyYW50ZWVkJywgJ2NlcnRhaW4nLCAnZGVmaW5pdGUnXTtcbiAgY29uc3QgbWVkaXVtQ29uZmlkZW5jZVdvcmRzID0gWydsaWtlbHknLCAncHJvYmFibGUnLCAnZXhwZWN0ZWQnXTtcbiAgXG4gIGNvbnN0IGxvd2VyVGl0bGUgPSB0aXRsZS50b0xvd2VyQ2FzZSgpO1xuICBcbiAgaWYgKGhpZ2hDb25maWRlbmNlV29yZHMuc29tZSh3b3JkID0+IGxvd2VyVGl0bGUuaW5jbHVkZXMod29yZCkpKSB7XG4gICAgcmV0dXJuICc4NS05NSUnO1xuICB9IGVsc2UgaWYgKG1lZGl1bUNvbmZpZGVuY2VXb3Jkcy5zb21lKHdvcmQgPT4gbG93ZXJUaXRsZS5pbmNsdWRlcyh3b3JkKSkpIHtcbiAgICByZXR1cm4gJzY1LTgwJSc7XG4gIH1cbiAgXG4gIHJldHVybiAnNTAtNzAlJztcbn1cblxuZnVuY3Rpb24gZXh0cmFjdFNwb3J0KHRpdGxlOiBzdHJpbmcpOiBzdHJpbmcge1xuICBjb25zdCBzcG9ydHNLZXl3b3JkcyA9IHtcbiAgICAnc29jY2VyJzogWydzb2NjZXInLCAnZm9vdGJhbGwnLCAnZmMgJywgJ3VuaXRlZCcsICdjaXR5J10sXG4gICAgJ2Jhc2tldGJhbGwnOiBbJ25iYScsICdiYXNrZXRiYWxsJywgJ2xha2VycycsICd3YXJyaW9ycyddLFxuICAgICd0ZW5uaXMnOiBbJ3Rlbm5pcycsICdhdHAnLCAnd3RhJywgJ29wZW4nXSxcbiAgICAnYmFzZWJhbGwnOiBbJ21sYicsICdiYXNlYmFsbCcsICd5YW5rZWVzJywgJ2RvZGdlcnMnXVxuICB9O1xuICBcbiAgY29uc3QgbG93ZXJUaXRsZSA9IHRpdGxlLnRvTG93ZXJDYXNlKCk7XG4gIFxuICBmb3IgKGNvbnN0IFtzcG9ydCwga2V5d29yZHNdIG9mIE9iamVjdC5lbnRyaWVzKHNwb3J0c0tleXdvcmRzKSkge1xuICAgIGlmIChrZXl3b3Jkcy5zb21lKGtleXdvcmQgPT4gbG93ZXJUaXRsZS5pbmNsdWRlcyhrZXl3b3JkKSkpIHtcbiAgICAgIHJldHVybiBzcG9ydDtcbiAgICB9XG4gIH1cbiAgXG4gIHJldHVybiAnc29jY2VyJzsgLy8gZGVmYXVsdFxufVxuXG5mdW5jdGlvbiBnZW5lcmF0ZUludGVybmFsUHJlZGljdGlvbnMoKTogUHJlZGljdGlvbltdIHtcbiAgcmV0dXJuIFtcbiAgICB7XG4gICAgICB0aXRsZTogJ01hbmNoZXN0ZXIgVW5pdGVkIHZzIENoZWxzZWEgLSBEcmF3IEFuYWx5c2lzJyxcbiAgICAgIGNvbnRlbnQ6ICdCb3RoIHRlYW1zIHNob3dpbmcgc2ltaWxhciBmb3JtLCBkZWZlbnNpdmUgc3RyZW5ndGhzIHN1Z2dlc3QgbG93LXNjb3JpbmcgZHJhdycsXG4gICAgICBzcG9ydDogJ3NvY2NlcicsXG4gICAgICBjb25maWRlbmNlOiAnNzUlJyxcbiAgICAgIHNvdXJjZTogJ2ludGVybmFsJ1xuICAgIH0sXG4gICAge1xuICAgICAgdGl0bGU6ICdSZWFsIE1hZHJpZCB2cyBCYXJjZWxvbmEgLSBPdmVyIDIuNSBHb2FscycsXG4gICAgICBjb250ZW50OiAnRWwgQ2xhc2ljbyB0cmFkaXRpb25hbGx5IGhpZ2gtc2NvcmluZywgYm90aCB0ZWFtcyBoYXZlIHN0cm9uZyBhdHRhY2tpbmcgcmVjb3JkcycsXG4gICAgICBzcG9ydDogJ3NvY2NlcicsXG4gICAgICBjb25maWRlbmNlOiAnODAlJyxcbiAgICAgIHNvdXJjZTogJ2ludGVybmFsJ1xuICAgIH1cbiAgXTtcbn1cblxuZnVuY3Rpb24gZ2VuZXJhdGVGYWxsYmFja1ByZWRpY3Rpb25zKCk6IFByZWRpY3Rpb25bXSB7XG4gIHJldHVybiBbXG4gICAge1xuICAgICAgdGl0bGU6ICdMaXZlcnBvb2wgdnMgQXJzZW5hbCAtIExpdmVycG9vbCBXaW4nLFxuICAgICAgY29udGVudDogJ0hvbWUgYWR2YW50YWdlIGFuZCByZWNlbnQgZm9ybSBmYXZvciBMaXZlcnBvb2wnLFxuICAgICAgc3BvcnQ6ICdzb2NjZXInLFxuICAgICAgY29uZmlkZW5jZTogJzcwJScsXG4gICAgICBzb3VyY2U6ICdmYWxsYmFjaydcbiAgICB9LFxuICAgIHtcbiAgICAgIHRpdGxlOiAnQmF5ZXJuIE11bmljaCB2cyBEb3J0bXVuZCAtIE92ZXIgMy41IEdvYWxzJyxcbiAgICAgIGNvbnRlbnQ6ICdHZXJtYW4gZGVyYmllcyB0eXBpY2FsbHkgZmVhdHVyZSBtYW55IGdvYWxzJyxcbiAgICAgIHNwb3J0OiAnc29jY2VyJyxcbiAgICAgIGNvbmZpZGVuY2U6ICc2NSUnLFxuICAgICAgc291cmNlOiAnZmFsbGJhY2snXG4gICAgfVxuICBdO1xufVxuXG4vLyBQcmVmZXRjaCBmdW5jdGlvbiBmb3IgYmFja2dyb3VuZCBsb2FkaW5nXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gcHJlZmV0Y2hQcmVkaWN0aW9ucygpOiBQcm9taXNlPHZvaWQ+IHtcbiAgdHJ5IHtcbiAgICBhd2FpdCBmZXRjaFByZWRpY3Rpb25zKCk7XG4gICAgY29uc29sZS5sb2coJ1ByZWRpY3Rpb25zIHByZWZldGNoZWQgc3VjY2Vzc2Z1bGx5Jyk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS53YXJuKCdQcmVmZXRjaCBmYWlsZWQ6JywgZXJyb3IpO1xuICB9XG59XG4iXSwibmFtZXMiOlsiYXhpb3MiLCJKU0RPTSIsIkNhY2hlTWFuYWdlciIsImZldGNoUHJlZGljdGlvbnMiLCJjYWNoZUtleSIsImNhY2hlZCIsImdldCIsImNvbnNvbGUiLCJsb2ciLCJyZXNwb25zZSIsInRpbWVvdXQiLCJoZWFkZXJzIiwiZG9tIiwiZGF0YSIsImRvY3VtZW50Iiwid2luZG93IiwicHJlZGljdGlvbkVsZW1lbnRzIiwicXVlcnlTZWxlY3RvckFsbCIsInByZWRpY3Rpb25zIiwiZm9yRWFjaCIsImVsZW1lbnQiLCJpbmRleCIsInRpdGxlIiwidGV4dENvbnRlbnQiLCJ0cmltIiwibGVuZ3RoIiwiY29uZmlkZW5jZSIsImFuYWx5emVDb25maWRlbmNlIiwic3BvcnQiLCJleHRyYWN0U3BvcnQiLCJwdXNoIiwiY29udGVudCIsInN1YnN0cmluZyIsInNvdXJjZSIsImludGVybmFsUHJlZGljdGlvbnMiLCJnZW5lcmF0ZUludGVybmFsUHJlZGljdGlvbnMiLCJzZXQiLCJlcnJvciIsImZhbGxiYWNrIiwiZ2VuZXJhdGVGYWxsYmFja1ByZWRpY3Rpb25zIiwiaGlnaENvbmZpZGVuY2VXb3JkcyIsIm1lZGl1bUNvbmZpZGVuY2VXb3JkcyIsImxvd2VyVGl0bGUiLCJ0b0xvd2VyQ2FzZSIsInNvbWUiLCJ3b3JkIiwiaW5jbHVkZXMiLCJzcG9ydHNLZXl3b3JkcyIsImtleXdvcmRzIiwiT2JqZWN0IiwiZW50cmllcyIsImtleXdvcmQiLCJwcmVmZXRjaFByZWRpY3Rpb25zIiwid2FybiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./src/services/predictionsService.ts\n");

/***/ }),

/***/ "(api)/./src/utils/cacheManager.ts":
/*!***********************************!*\
  !*** ./src/utils/cacheManager.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nclass CacheManager {\n    static{\n        this.cache = new Map();\n    }\n    static{\n        this.maxSize = 1000;\n    }\n    static{\n        this.cleanupInterval = null;\n    }\n    static{\n        // Start automatic cleanup every 5 minutes\n        this.startCleanup();\n    }\n    static set(key, data, ttlMinutes = 10) {\n        // Implement LRU eviction if cache is full\n        if (this.cache.size >= this.maxSize) {\n            this.evictLRU();\n        }\n        this.cache.set(key, {\n            data,\n            timestamp: Date.now(),\n            ttl: ttlMinutes * 60 * 1000,\n            accessCount: 0,\n            lastAccessed: Date.now()\n        });\n    }\n    static get(key) {\n        const cached = this.cache.get(key);\n        if (!cached) return null;\n        // Check if expired\n        if (Date.now() - cached.timestamp > cached.ttl) {\n            this.cache.delete(key);\n            return null;\n        }\n        // Update access statistics\n        cached.accessCount++;\n        cached.lastAccessed = Date.now();\n        return cached.data;\n    }\n    // LRU eviction - remove least recently used items\n    static evictLRU() {\n        let oldestKey = \"\";\n        let oldestTime = Date.now();\n        for (const [key, entry] of this.cache.entries()){\n            if (entry.lastAccessed < oldestTime) {\n                oldestTime = entry.lastAccessed;\n                oldestKey = key;\n            }\n        }\n        if (oldestKey) {\n            this.cache.delete(oldestKey);\n        }\n    }\n    // Background cleanup of expired entries\n    static startCleanup() {\n        this.cleanupInterval = setInterval(()=>{\n            const now = Date.now();\n            for (const [key, entry] of this.cache.entries()){\n                if (now - entry.timestamp > entry.ttl) {\n                    this.cache.delete(key);\n                }\n            }\n        }, 5 * 60 * 1000); // Every 5 minutes\n    }\n    static clear() {\n        this.cache.clear();\n    }\n    static getStats() {\n        const totalAccess = Array.from(this.cache.values()).reduce((sum, entry)=>sum + entry.accessCount, 0);\n        return {\n            size: this.cache.size,\n            keys: Array.from(this.cache.keys()),\n            hitRate: totalAccess > 0 ? this.cache.size / totalAccess * 100 : 0,\n            memoryUsage: `${(this.cache.size * 0.1).toFixed(2)} KB (est.)`\n        };\n    }\n    static prefetch(keys, fetchFunction) {\n        keys.forEach(async (key)=>{\n            if (!this.get(key)) {\n                try {\n                    const data = await fetchFunction(key);\n                    this.set(key, data, 15); // 15 minute TTL for prefetched data\n                } catch (error) {\n                    console.warn(`Prefetch failed for key ${key}:`, error);\n                }\n            }\n        });\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CacheManager);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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RVEsYUFBYSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUNuQyxLQUFLLENBQUNTLElBQUksR0FBRyxHQUFFLEVBQUcyQixPQUFPLENBQUMsR0FBRyxVQUFVLENBQUM7UUFDaEU7SUFDRjtJQUVBLE9BQU9DLFNBQVNKLElBQWMsRUFBRUssYUFBNEMsRUFBUTtRQUNsRkwsS0FBS00sT0FBTyxDQUFDLE9BQU9qQztZQUNsQixJQUFJLENBQUMsSUFBSSxDQUFDVyxHQUFHLENBQUNYLE1BQU07Z0JBQ2xCLElBQUk7b0JBQ0YsTUFBTUMsT0FBTyxNQUFNK0IsY0FBY2hDO29CQUNqQyxJQUFJLENBQUNELEdBQUcsQ0FBQ0MsS0FBS0MsTUFBTSxLQUFLLG9DQUFvQztnQkFDL0QsRUFBRSxPQUFPaUMsT0FBTztvQkFDZEMsUUFBUUMsSUFBSSxDQUFDLENBQUMsd0JBQXdCLEVBQUVwQyxJQUFJLENBQUMsQ0FBQyxFQUFFa0M7Z0JBQ2xEO1lBQ0Y7UUFDRjtJQUNGO0FBQ0Y7QUFFQSxpRUFBZXpDLFlBQVlBLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93b3Jrc3BhY2UvLi9zcmMvdXRpbHMvY2FjaGVNYW5hZ2VyLnRzPzYwMmMiXSwic291cmNlc0NvbnRlbnQiOlsiXG5pbnRlcmZhY2UgQ2FjaGVFbnRyeSB7XG4gIGRhdGE6IGFueTtcbiAgdGltZXN0YW1wOiBudW1iZXI7XG4gIHR0bDogbnVtYmVyO1xuICBhY2Nlc3NDb3VudDogbnVtYmVyO1xuICBsYXN0QWNjZXNzZWQ6IG51bWJlcjtcbn1cblxuY2xhc3MgQ2FjaGVNYW5hZ2VyIHtcbiAgcHJpdmF0ZSBzdGF0aWMgY2FjaGUgPSBuZXcgTWFwPHN0cmluZywgQ2FjaGVFbnRyeT4oKTtcbiAgcHJpdmF0ZSBzdGF0aWMgbWF4U2l6ZSA9IDEwMDA7XG4gIHByaXZhdGUgc3RhdGljIGNsZWFudXBJbnRlcnZhbDogTm9kZUpTLlRpbWVvdXQgfCBudWxsID0gbnVsbDtcblxuICBzdGF0aWMge1xuICAgIC8vIFN0YXJ0IGF1dG9tYXRpYyBjbGVhbnVwIGV2ZXJ5IDUgbWludXRlc1xuICAgIHRoaXMuc3RhcnRDbGVhbnVwKCk7XG4gIH1cblxuICBzdGF0aWMgc2V0KGtleTogc3RyaW5nLCBkYXRhOiBhbnksIHR0bE1pbnV0ZXM6IG51bWJlciA9IDEwKTogdm9pZCB7XG4gICAgLy8gSW1wbGVtZW50IExSVSBldmljdGlvbiBpZiBjYWNoZSBpcyBmdWxsXG4gICAgaWYgKHRoaXMuY2FjaGUuc2l6ZSA+PSB0aGlzLm1heFNpemUpIHtcbiAgICAgIHRoaXMuZXZpY3RMUlUoKTtcbiAgICB9XG5cbiAgICB0aGlzLmNhY2hlLnNldChrZXksIHtcbiAgICAgIGRhdGEsXG4gICAgICB0aW1lc3RhbXA6IERhdGUubm93KCksXG4gICAgICB0dGw6IHR0bE1pbnV0ZXMgKiA2MCAqIDEwMDAsXG4gICAgICBhY2Nlc3NDb3VudDogMCxcbiAgICAgIGxhc3RBY2Nlc3NlZDogRGF0ZS5ub3coKVxuICAgIH0pO1xuICB9XG5cbiAgc3RhdGljIGdldChrZXk6IHN0cmluZyk6IGFueSB8IG51bGwge1xuICAgIGNvbnN0IGNhY2hlZCA9IHRoaXMuY2FjaGUuZ2V0KGtleSk7XG4gICAgXG4gICAgaWYgKCFjYWNoZWQpIHJldHVybiBudWxsO1xuICAgIFxuICAgIC8vIENoZWNrIGlmIGV4cGlyZWRcbiAgICBpZiAoRGF0ZS5ub3coKSAtIGNhY2hlZC50aW1lc3RhbXAgPiBjYWNoZWQudHRsKSB7XG4gICAgICB0aGlzLmNhY2hlLmRlbGV0ZShrZXkpO1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIFxuICAgIC8vIFVwZGF0ZSBhY2Nlc3Mgc3RhdGlzdGljc1xuICAgIGNhY2hlZC5hY2Nlc3NDb3VudCsrO1xuICAgIGNhY2hlZC5sYXN0QWNjZXNzZWQgPSBEYXRlLm5vdygpO1xuICAgIFxuICAgIHJldHVybiBjYWNoZWQuZGF0YTtcbiAgfVxuXG4gIC8vIExSVSBldmljdGlvbiAtIHJlbW92ZSBsZWFzdCByZWNlbnRseSB1c2VkIGl0ZW1zXG4gIHByaXZhdGUgc3RhdGljIGV2aWN0TFJVKCk6IHZvaWQge1xuICAgIGxldCBvbGRlc3RLZXkgPSAnJztcbiAgICBsZXQgb2xkZXN0VGltZSA9IERhdGUubm93KCk7XG4gICAgXG4gICAgZm9yIChjb25zdCBba2V5LCBlbnRyeV0gb2YgdGhpcy5jYWNoZS5lbnRyaWVzKCkpIHtcbiAgICAgIGlmIChlbnRyeS5sYXN0QWNjZXNzZWQgPCBvbGRlc3RUaW1lKSB7XG4gICAgICAgIG9sZGVzdFRpbWUgPSBlbnRyeS5sYXN0QWNjZXNzZWQ7XG4gICAgICAgIG9sZGVzdEtleSA9IGtleTtcbiAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgaWYgKG9sZGVzdEtleSkge1xuICAgICAgdGhpcy5jYWNoZS5kZWxldGUob2xkZXN0S2V5KTtcbiAgICB9XG4gIH1cblxuICAvLyBCYWNrZ3JvdW5kIGNsZWFudXAgb2YgZXhwaXJlZCBlbnRyaWVzXG4gIHByaXZhdGUgc3RhdGljIHN0YXJ0Q2xlYW51cCgpOiB2b2lkIHtcbiAgICB0aGlzLmNsZWFudXBJbnRlcnZhbCA9IHNldEludGVydmFsKCgpID0+IHtcbiAgICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7XG4gICAgICBmb3IgKGNvbnN0IFtrZXksIGVudHJ5XSBvZiB0aGlzLmNhY2hlLmVudHJpZXMoKSkge1xuICAgICAgICBpZiAobm93IC0gZW50cnkudGltZXN0YW1wID4gZW50cnkudHRsKSB7XG4gICAgICAgICAgdGhpcy5jYWNoZS5kZWxldGUoa2V5KTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sIDUgKiA2MCAqIDEwMDApOyAvLyBFdmVyeSA1IG1pbnV0ZXNcbiAgfVxuXG4gIHN0YXRpYyBjbGVhcigpOiB2b2lkIHtcbiAgICB0aGlzLmNhY2hlLmNsZWFyKCk7XG4gIH1cblxuICBzdGF0aWMgZ2V0U3RhdHMoKTogeyBcbiAgICBzaXplOiBudW1iZXI7IFxuICAgIGtleXM6IHN0cmluZ1tdO1xuICAgIGhpdFJhdGU6IG51bWJlcjtcbiAgICBtZW1vcnlVc2FnZTogc3RyaW5nO1xuICB9IHtcbiAgICBjb25zdCB0b3RhbEFjY2VzcyA9IEFycmF5LmZyb20odGhpcy5jYWNoZS52YWx1ZXMoKSlcbiAgICAgIC5yZWR1Y2UoKHN1bSwgZW50cnkpID0+IHN1bSArIGVudHJ5LmFjY2Vzc0NvdW50LCAwKTtcbiAgICBcbiAgICByZXR1cm4ge1xuICAgICAgc2l6ZTogdGhpcy5jYWNoZS5zaXplLFxuICAgICAga2V5czogQXJyYXkuZnJvbSh0aGlzLmNhY2hlLmtleXMoKSksXG4gICAgICBoaXRSYXRlOiB0b3RhbEFjY2VzcyA+IDAgPyAodGhpcy5jYWNoZS5zaXplIC8gdG90YWxBY2Nlc3MpICogMTAwIDogMCxcbiAgICAgIG1lbW9yeVVzYWdlOiBgJHsodGhpcy5jYWNoZS5zaXplICogMC4xKS50b0ZpeGVkKDIpfSBLQiAoZXN0LilgXG4gICAgfTtcbiAgfVxuXG4gIHN0YXRpYyBwcmVmZXRjaChrZXlzOiBzdHJpbmdbXSwgZmV0Y2hGdW5jdGlvbjogKGtleTogc3RyaW5nKSA9PiBQcm9taXNlPGFueT4pOiB2b2lkIHtcbiAgICBrZXlzLmZvckVhY2goYXN5bmMgKGtleSkgPT4ge1xuICAgICAgaWYgKCF0aGlzLmdldChrZXkpKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IGZldGNoRnVuY3Rpb24oa2V5KTtcbiAgICAgICAgICB0aGlzLnNldChrZXksIGRhdGEsIDE1KTsgLy8gMTUgbWludXRlIFRUTCBmb3IgcHJlZmV0Y2hlZCBkYXRhXG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgY29uc29sZS53YXJuKGBQcmVmZXRjaCBmYWlsZWQgZm9yIGtleSAke2tleX06YCwgZXJyb3IpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgQ2FjaGVNYW5hZ2VyO1xuIl0sIm5hbWVzIjpbIkNhY2hlTWFuYWdlciIsImNhY2hlIiwiTWFwIiwibWF4U2l6ZSIsImNsZWFudXBJbnRlcnZhbCIsInN0YXJ0Q2xlYW51cCIsInNldCIsImtleSIsImRhdGEiLCJ0dGxNaW51dGVzIiwic2l6ZSIsImV2aWN0TFJVIiwidGltZXN0YW1wIiwiRGF0ZSIsIm5vdyIsInR0bCIsImFjY2Vzc0NvdW50IiwibGFzdEFjY2Vzc2VkIiwiZ2V0IiwiY2FjaGVkIiwiZGVsZXRlIiwib2xkZXN0S2V5Iiwib2xkZXN0VGltZSIsImVudHJ5IiwiZW50cmllcyIsInNldEludGVydmFsIiwiY2xlYXIiLCJnZXRTdGF0cyIsInRvdGFsQWNjZXNzIiwiQXJyYXkiLCJmcm9tIiwidmFsdWVzIiwicmVkdWNlIiwic3VtIiwia2V5cyIsImhpdFJhdGUiLCJtZW1vcnlVc2FnZSIsInRvRml4ZWQiLCJwcmVmZXRjaCIsImZldGNoRnVuY3Rpb24iLCJmb3JFYWNoIiwiZXJyb3IiLCJjb25zb2xlIiwid2FybiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./src/utils/cacheManager.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fpredictions&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fpredictions.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();