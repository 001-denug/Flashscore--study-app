"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "src_utils_monetizationManager_ts";
exports.ids = ["src_utils_monetizationManager_ts"];
exports.modules = {

/***/ "./src/utils/monetizationManager.ts":
/*!******************************************!*\
  !*** ./src/utils/monetizationManager.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nclass MonetizationManager {\n    static{\n        this.EARNINGS_KEY = \"creator_earnings\";\n    }\n    static{\n        this.CONFIG_KEY = \"monetization_config\";\n    }\n    static{\n        this.DEFAULT_CONFIG = {\n            creatorCommission: 0.15,\n            withdrawalMinimum: 1000,\n            conversionRate: 100,\n            platformFee: 0.05 // 5% platform fee\n        };\n    }\n    static getCreatorEarnings(userId) {\n        const data = localStorage.getItem(this.EARNINGS_KEY);\n        const earnings = data ? JSON.parse(data) : {};\n        return earnings[userId] || {\n            userId,\n            totalEarned: 0,\n            pendingWithdrawal: 0,\n            lastPayout: new Date(0),\n            conversionRate: this.DEFAULT_CONFIG.conversionRate\n        };\n    }\n    static recordUserPurchase(creatorId, purchaseAmount) {\n        const config = this.getConfig();\n        const creatorEarning = purchaseAmount * config.creatorCommission;\n        const data = localStorage.getItem(this.EARNINGS_KEY);\n        const earnings = data ? JSON.parse(data) : {};\n        const currentEarnings = this.getCreatorEarnings(creatorId);\n        earnings[creatorId] = {\n            ...currentEarnings,\n            totalEarned: currentEarnings.totalEarned + creatorEarning,\n            pendingWithdrawal: currentEarnings.pendingWithdrawal + creatorEarning\n        };\n        localStorage.setItem(this.EARNINGS_KEY, JSON.stringify(earnings));\n    }\n    static canWithdraw(userId) {\n        const earnings = this.getCreatorEarnings(userId);\n        return earnings.pendingWithdrawal >= this.DEFAULT_CONFIG.withdrawalMinimum;\n    }\n    static processWithdrawal(userId, piWalletAddress) {\n        const earnings = this.getCreatorEarnings(userId);\n        if (!this.canWithdraw(userId)) {\n            return {\n                success: false,\n                error: `Minimum withdrawal is ${this.DEFAULT_CONFIG.withdrawalMinimum} Pi coins`\n            };\n        }\n        const realPiAmount = earnings.pendingWithdrawal / this.DEFAULT_CONFIG.conversionRate;\n        // In production, integrate with Pi Network API\n        // For now, simulate withdrawal\n        const data = localStorage.getItem(this.EARNINGS_KEY);\n        const allEarnings = data ? JSON.parse(data) : {};\n        allEarnings[userId] = {\n            ...earnings,\n            pendingWithdrawal: 0,\n            lastPayout: new Date()\n        };\n        localStorage.setItem(this.EARNINGS_KEY, JSON.stringify(allEarnings));\n        // Add withdrawal transaction record\n        this.addWithdrawalRecord(userId, realPiAmount, piWalletAddress);\n        return {\n            success: true,\n            amount: realPiAmount\n        };\n    }\n    static addWithdrawalRecord(userId, amount, address) {\n        const record = {\n            id: Date.now().toString(),\n            userId,\n            amount,\n            address,\n            timestamp: new Date(),\n            status: \"completed\"\n        };\n        const data = localStorage.getItem(\"withdrawal_records\");\n        const records = data ? JSON.parse(data) : [];\n        records.unshift(record);\n        localStorage.setItem(\"withdrawal_records\", JSON.stringify(records));\n    }\n    static getConfig() {\n        const data = localStorage.getItem(this.CONFIG_KEY);\n        return data ? JSON.parse(data) : this.DEFAULT_CONFIG;\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MonetizationManager);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/utils/monetizationManager.ts\n");

/***/ })

};
;